package com.kittera.crypto487.lib;

import org.junit.jupiter.api.Test;

import java.math.BigInteger;
import java.util.Arrays;
import java.util.Random;

import static org.junit.jupiter.api.Assertions.*;

class HashLibTest {
   
   @Test
   void testSHA3_224() {
      byte[] inBytes;
      byte[] outBytes;
      String actual;
      
      inBytes = new byte[]{};
      outBytes = HashLib.SHA3_224(inBytes);
      actual = new BigInteger(1, outBytes)
            .toString(16)
            .toUpperCase();
      assertEquals("6B4E03423667DBB73B6E15454F0EB1ABD4597F9A1B078E3F5B5A6BC7", actual, "Testing SHA224 w/ no input");
      System.out.println("ACTUAL: " + actual);
      System.out.println("EXPECT: 6B4E03423667DBB73B6E15454F0EB1ABD4597F9A1B078E3F5B5A6BC7\n");
      // 6B4E03423667DBB73B6E15454F0EB1ABD4597F9A1B078E3F5B5A6BC7
      
      inBytes = new byte[]{(byte) 0x91, (byte) 0xC7, (byte) 0x10, (byte) 0x68, (byte) 0xF8};
      outBytes = HashLib.SHA3_224(inBytes);
      actual = new BigInteger(1, outBytes)
            .toString(16)
            .toUpperCase();
      assertEquals("989F017709F50BD0230623C417F3DAF194507F7B90A11127BA1638FA", actual, "Testing SHA224 w/ small input");
      System.out.println("ACTUAL: " + actual);
      System.out.println("EXPECT: 989F017709F50BD0230623C417F3DAF194507F7B90A11127BA1638FA\n");
      // 989F017709F50BD0230623C417F3DAF194507F7B90A11127BA1638FA
      
      
      BigInteger longMsg = new BigInteger("31C82D71785B7CA6B651CB6C8C9AD5E2ACEB0B0633C088D33AA247ADA7A594FF4936C023251319820A9B19FC6C48DE8A6F7ADA214176CCDAADAEEF51ED43714AC0C8269BBD497E46E78BB5E58196494B2471B1680E2D4C6DBD249831BD83A4D3BE06C8A2E903933974AA05EE748BFE6EF359F7A143EDF0D4918DA916BD6F15E26A790CFF514B40A5DA7F72E1ED2FE63A05B8149587BEA05653718CC8980EADBFECA85B7C9C286DD040936585938BE7F98219700C83A9443C2856A80FF46852B26D1B1EDF72A30203CF6C44A10FA6EAF1920173CEDFB5C4CF3AC665B37A86ED02155BBBF17DC2E786AF9478FE0889D86C5BFA85A242EB0854B1482B7BD16F67F80BEF9C7A628F05A107936A64273A97B0088B0E515451F916B5656230A12BA6DC78", 16);
      inBytes = longMsg.toByteArray();
      outBytes = HashLib.SHA3_224(inBytes);
      actual = new BigInteger(1, outBytes)
            .toString(16)
            .toUpperCase();
      assertEquals("AAB23C9E7FB9D7DACEFDFD0B1AE85AB1374ABFF7C4E3F7556ECAE412", actual, "Testing SHA224 w/ large input");
      System.out.println("ACTUAL: " + actual);
      System.out.println("EXPECT: AAB23C9E7FB9D7DACEFDFD0B1AE85AB1374ABFF7C4E3F7556ECAE412\n");
      // AAB23C9E7FB9D7DACEFDFD0B1AE85AB1374ABFF7C4E3F7556ECAE412
   }
   
   @Test
   void testSHA3_256() {
      byte[] inBytes;
      byte[] outBytes;
      String actual;
   
      inBytes = new byte[]{};
      outBytes = HashLib.SHA3_256(inBytes);
      actual = new BigInteger(1, outBytes).toString(16).toUpperCase();
      assertEquals("A7FFC6F8BF1ED76651C14756A061D662F580FF4DE43B49FA82D80A4B80F8434A", actual, "Testing SHA256 w/ no input");
      System.out.println("ACTUAL: " + actual);
      System.out.println("EXPECT: A7FFC6F8BF1ED76651C14756A061D662F580FF4DE43B49FA82D80A4B80F8434A\n");
      //A7FFC6F8BF1ED76651C14756A061D662F580FF4DE43B49FA82D80A4B80F8434A
      
   
      inBytes = new byte[]{(byte) 0xE9};
      outBytes = HashLib.SHA3_256(inBytes);
      actual = new BigInteger(1, outBytes).toString(16).toUpperCase();
      assertEquals("F0D04DD1E6CFC29A4460D521796852F25D9EF8D28B44EE91FF5B759D72C1E6D6", actual, "Testing SHA256 w/ small input");
      System.out.println("ACTUAL: " + actual);
      System.out.println("EXPECT: F0D04DD1E6CFC29A4460D521796852F25D9EF8D28B44EE91FF5B759D72C1E6D6");
      System.out.println();
      // F0D04DD1E6CFC29A4460D521796852F25D9EF8D28B44EE91FF5B759D72C1E6D6
      
      inBytes = new byte[]{0x02, (byte) 0x96, (byte) 0xF2, (byte) 0xC4, (byte) 0x0A};
      outBytes = HashLib.SHA3_256(inBytes);
      actual = new BigInteger(1, outBytes).toString(16).toUpperCase();
      assertEquals("53A018937221081D09ED0497377E32A1FA724025DFDC1871FA503D545DF4B40D", actual, "Testing SHA256 w/ small input");
      System.out.println("ACTUAL: " + actual);
      System.out.println("EXPECT: 53A018937221081D09ED0497377E32A1FA724025DFDC1871FA503D545DF4B40D");
      System.out.println();
      // 53A018937221081D09ED0497377E32A1FA724025DFDC1871FA503D545DF4B40D
   
      
      BigInteger longMsg = new BigInteger("B1CAA396771A09A1DB9BC20543E988E359D47C2A616417BBCA1B62CB02796A888FC6EEFF5C0B5C3D5062FCB4256F6AE1782F492C1CF03610B4A1FB7B814C057878E1190B9835425C7A4A0E182AD1F91535ED2A35033A5D8C670E21C575FF43C194A58A82D4A1A44881DD61F9F8161FC6B998860CBE4975780BE93B6F87980BAD0A99AA2CB7556B478CA35D1F3746C33E2BB7C47AF426641CC7BBB3425E2144820345E1D0EA5B7DA2C3236A52906ACDC3B4D34E474DD714C0C40BF006A3A1D889A632983814BBC4A14FE5F159AA89249E7C738B3B73666BAC2A615A83FD21AE0A1CE7352ADE7B278B587158FD2FABB217AA1FE31D0BDA53272045598015A8AE4D8CEC226FEFA58DAA05500906C4D85E7567", 16);
      inBytes = longMsg.toByteArray();
      inBytes = Arrays.copyOfRange(inBytes,1,inBytes.length);
      outBytes = HashLib.SHA3_256(inBytes);
      actual = new BigInteger(1, outBytes).toString(16).toUpperCase();
      assertEquals("CB5648A1D61C6C5BDACD96F81C9591DEBC3950DCF658145B8D996570BA881A05", actual, "Testing SHA256 w/ med input");
      System.out.println("ACTUAL: " + actual);
      System.out.println("EXPECT: CB5648A1D61C6C5BDACD96F81C9591DEBC3950DCF658145B8D996570BA881A05\n");
      // CB5648A1D61C6C5BDACD96F81C9591DEBC3950DCF658145B8D996570BA881A05
      
   
      BigInteger ten88Msg = new BigInteger("56EA14D7FCB0DB748FF649AAA5D0AFDC2357528A9AAD6076D73B2805B53D89E73681ABFAD26BEE6C0F3D20215295F354F538AE80990D2281BE6DE0F6919AA9EB048C26B524F4D91CA87B54C0C54AA9B54AD02171E8BF31E8D158A9F586E92FFCE994ECCE9A5185CC80364D50A6F7B94849A914242FCB73F33A86ECC83C3403630D20650DDB8CD9C4", 16);
      inBytes = ten88Msg.toByteArray();
      outBytes = HashLib.SHA3_256(inBytes);
      actual = new BigInteger(1, outBytes).toString(16).toUpperCase();
      assertEquals("4BEAE3515BA35EC8CBD1D94567E22B0D7809C466ABFBAFE9610349597BA15B45", actual, "Testing SHA256 w/ med input");
      System.out.println("ACTUAL: " + actual);
      System.out.println("EXPECT: 4BEAE3515BA35EC8CBD1D94567E22B0D7809C466ABFBAFE9610349597BA15B45");
      System.out.println();
      // 4BEAE3515BA35EC8CBD1D94567E22B0D7809C466ABFBAFE9610349597BA15B45
      
      
      BigInteger twelveOh55Msg = new BigInteger
      inBytes = twelveOh55Msg.toByteArray();
      inBytes = Arrays.copyOfRange(inBytes,1,inBytes.length);
      outBytes = HashLib.SHA3_256(inBytes);
      actual = new BigInteger(1, outBytes).toString(16).toUpperCase();
      assertEquals("8F636C1DDBDBFBF23239E6E75B5FD79AEC3D8D3125346D73D97ACDEC3002FF6", actual, "Testing SHA256 w/ large input");
      System.out.println("ACTUAL: " + actual);
      System.out.println("EXPECT: 8F636C1DDBDBFBF23239E6E75B5FD79AEC3D8D3125346D73D97ACDEC3002FF6");
      System.out.println();
      // 08F636C1DDBDBFBF23239E6E75B5FD79AEC3D8D3125346D73D97ACDEC3002FF6
   }
   
   @Test
   void testSHA3_384() {
      byte[] inBytes;
      byte[] outBytes;
      String actual;
   
      inBytes = new byte[]{};
      outBytes = HashLib.SHA3_384(inBytes);
      actual = new BigInteger(1, outBytes).toString(16).toUpperCase();
      assertEquals("C63A75B845E4F7D01107D852E4C2485C51A50AAAA94FC61995E71BBEE983A2AC3713831264ADB47FB6BD1E058D5F004", actual, "Testing SHA384 w/ no input");
      System.out.println("ACTUAL: " + actual);
      System.out.println("EXPECT: C63A75B845E4F7D01107D852E4C2485C51A50AAAA94FC61995E71BBEE983A2AC3713831264ADB47FB6BD1E058D5F004\n");
      // C63A75B845E4F7D01107D852E4C2485C51A50AAAA94FC61995E71BBEE983A2AC3713831264ADB47FB6BD1E058D5F004
      
      inBytes = new byte[]{(byte) 0xC0, (byte) 0x92, (byte) 0x0F, (byte) 0x2B, (byte) 0xD1, (byte) 0xE2, (byte) 0xD3, (byte) 0x02, (byte) 0x25, (byte) 0x9B};
      outBytes = HashLib.SHA3_384(inBytes);
      actual = new BigInteger(1, outBytes).toString(16).toUpperCase();
      assertEquals("3D1584220409F88D38409A29ECAEBB490EF884B5ACBA2C7EAF23914BAB7F5F0FC97EE1E6336F88DFD4D0A06E902CCD25", actual, "Testing SHA384 w/ small input");
      System.out.println("ACTUAL: " + actual);
      System.out.println("EXPECT: 3D1584220409F88D38409A29ECAEBB490EF884B5ACBA2C7EAF23914BAB7F5F0FC97EE1E6336F88DFD4D0A06E902CCD25");
      System.out.println();
      // 3D1584220409F88D38409A29ECAEBB490EF884B5ACBA2C7EAF23914BAB7F5F0FC97EE1E6336F88DFD4D0A06E902CCD25
   
      BigInteger longMsg = new BigInteger("5FE35923B4E0AF7DD24971812A58425519850A506DFA9B0D254795BE785786C319A2567CBAA5E35BCF8FE83D943E23FA5169B73ADC1FCF8B607084B15E6A013DF147E46256E4E803AB75C110F77848136BE7D806E8B2F868C16C3A90C14463407038CB7D9285079EF162C6A45CEDF9C9F066375C969B5FCBCDA37F02AACFF4F31CDED3767570885426BEBD9ECA877E44674E9AE2F0C24CDD0E7E1AAF1FF2FE7F80A1C4F5078EB34CD4F06FA94A2D1EAB5806CA43FD0F06C60B63D5402B95C70C21EA65A151C5CFAF8262A46BE3C722264B", 16);
      inBytes = longMsg.toByteArray();
      outBytes = HashLib.SHA3_384(inBytes);
      actual = new BigInteger(1, outBytes).toString(16).toUpperCase();
      assertEquals("3054D249F916A6039B2A9C3EBEC1418791A0608A170E6D36486035E5F92635EABA98072A85373CB54E2AE3F982CE132B", actual, "Testing SHA384 w/ med input");
      System.out.println("ACTUAL: " + actual);
      System.out.println("EXPECT: 3054D249F916A6039B2A9C3EBEC1418791A0608A170E6D36486035E5F92635EABA98072A85373CB54E2AE3F982CE132B\n");
      // 3054D249F916A6039B2A9C3EBEC1418791A0608A170E6D36486035E5F92635EABA98072A85373CB54E2AE3F982CE132B
   
      BigInteger twelveOh55Msg = new BigInteger
      inBytes = twelveOh55Msg.toByteArray();
      outBytes = HashLib.SHA3_384(inBytes);
      actual = new BigInteger(1, outBytes).toString(16).toUpperCase();
      assertEquals("DA901366899D382754B7F99A6AEBA660B407DBD383F49514FFECEA5254DDDA1ED926BBBB50B9CE12455CD5E94F57573", actual, "Testing SHA384 w/ large input");
      System.out.println("ACTUAL: " + actual);
      System.out.println("EXPECT: DA901366899D382754B7F99A6AEBA660B407DBD383F49514FFECEA5254DDDA1ED926BBBB50B9CE12455CD5E94F57573");
      System.out.println();
      // DA901366899D382754B7F99A6AEBA660B407DBD383F49514FFECEA5254DDDA1ED926BBBB50B9CE12455CD5E94F57573
   }
   
   @Test
   void testSHA3_512() {
      byte[] inBytes;
      byte[] outBytes;
      String actual;
   
      inBytes = new byte[]{};
      outBytes = HashLib.SHA3_512(inBytes);
      actual = new BigInteger(1, outBytes).toString(16).toUpperCase();
      assertEquals("A69F73CCA23A9AC5C8B567DC185A756E97C982164FE25859E0D1DCC1475C80A615B2123AF1F5F94C11E3E9402C3AC558F500199D95B6D3E301758586281DCD26", actual, "Testing SHA512 w/ no input");
      System.out.println("ACTUAL: " + actual);
      System.out.println("EXPECT: A69F73CCA23A9AC5C8B567DC185A756E97C982164FE25859E0D1DCC1475C80A615B2123AF1F5F94C11E3E9402C3AC558F500199D95B6D3E301758586281DCD26\n");
      // A69F73CCA23A9AC5C8B567DC185A756E97C982164FE25859E0D1DCC1475C80A615B2123AF1F5F94C11E3E9402C3AC558F500199D95B6D3E301758586281DCD26
   
      inBytes = new byte[]{(byte) 0x1C, (byte) 0xA9, (byte) 0x84, (byte) 0xDC, (byte) 0xC9, (byte) 0x13, (byte) 0x34, (byte) 0x43, (byte) 0x70, (byte) 0xCF};
      outBytes = HashLib.SHA3_512(inBytes);
      actual = new BigInteger(1, outBytes).toString(16).toUpperCase();
      assertEquals("6915EA0EEFFB99B9B246A0E34DAF3947852684C3D618260119A22835659E4F23D4EB66A15D0AFFB8E93771578F5E8F25B7A5F2A55F511FB8B96325BA2CD14816", actual, "Testing SHA512 w/ small input");
      System.out.println("ACTUAL: " + actual);
      System.out.println("EXPECT: 6915EA0EEFFB99B9B246A0E34DAF3947852684C3D618260119A22835659E4F23D4EB66A15D0AFFB8E93771578F5E8F25B7A5F2A55F511FB8B96325BA2CD14816");
      System.out.println();
      // 6915EA0EEFFB99B9B246A0E34DAF3947852684C3D618260119A22835659E4F23D4EB66A15D0AFFB8E93771578F5E8F25B7A5F2A55F511FB8B96325BA2CD14816
   
      BigInteger longMsg = new BigInteger("991C4E7402C7DA689DD5525AF76FCC58FE9CC1451308C0C4600363586CCC83C9EC10A8C9DDAEC3D7CFBD206484D09634B9780108440BF27A5FA4A428446B3214FA17084B6EB197C5C59A4E8DF1CFC521826C3B1CBF6F4212F6BFB9BC106DFB5568395643DE58BFFA2774C31E67F5C1E7017F57CAADBB1A56CC5B8A5CF9584552E17E7AF9542BA13E9C54695E0DC8F24EDDB93D5A3678E10C8A80FF4F27B677D40BEF5CB5F9B3A659CC4127970CD2C11EBF22D514812DFEFDD73600DFC10EFBA38E93E5BFF47736126043E50F8B9B941E4EC3083FB762DBF15C86", 16);
      inBytes = longMsg.toByteArray();
      inBytes = Arrays.copyOfRange(inBytes,1,inBytes.length);
      outBytes = HashLib.SHA3_512(inBytes);
      actual = new BigInteger(1, outBytes).toString(16).toUpperCase();
      assertEquals("CD0F2A48E9AA8CC700D3F64EFB013F3600EBDBB524930C682D21025EAB990EB6D7C52E611F884031FAFD9360E5225AB7E4EC24CBE97F3AF6DBE4A86A4F068BA7", actual, "Testing SHA512 w/ med input");
      System.out.println("ACTUAL: " + actual);
      System.out.println("EXPECT: CD0F2A48E9AA8CC700D3F64EFB013F3600EBDBB524930C682D21025EAB990EB6D7C52E611F884031FAFD9360E5225AB7E4EC24CBE97F3AF6DBE4A86A4F068BA7\n");
      // CD0F2A48E9AA8CC700D3F64EFB013F3600EBDBB524930C682D21025EAB990EB6D7C52E611F884031FAFD9360E5225AB7E4EC24CBE97F3AF6DBE4A86A4F068BA7
   
      BigInteger twelveOh55Msg = new BigInteger
      inBytes = twelveOh55Msg.toByteArray();
      outBytes = HashLib.SHA3_512(inBytes);
      actual = new BigInteger(1, outBytes).toString(16).toUpperCase();
      assertEquals("C128539A58423E5D6290F7AEBD26ECA08E6E5DA7B93F151293AF186FDEA066759C47DA8E57C9DE526BCD63348326CDDDD28F1E9A3EBC08DAC6321599A783C3", actual, "Testing SHA512 w/ large input");
      System.out.println("ACTUAL: " + actual);
      System.out.println("EXPECT: C128539A58423E5D6290F7AEBD26ECA08E6E5DA7B93F151293AF186FDEA066759C47DA8E57C9DE526BCD63348326CDDDD28F1E9A3EBC08DAC6321599A783C3");
      System.out.println();
      // 00C128539A58423E5D6290F7AEBD26ECA08E6E5DA7B93F151293AF186FDEA066759C47DA8E57C9DE526BCD63348326CDDDD28F1E9A3EBC08DAC6321599A783C3
   }
   
   @Test
   void testSHAKE128() {
      byte[] inBytes;
      byte[] outBytes;
      String actual;
      
      System.out.println("00");
      inBytes = new byte[]{};
      outBytes = HashLib.SHAKE128(inBytes, 128 / 8);
      actual = new BigInteger(1, outBytes).toString(16).toUpperCase();
      assertEquals("7F9C2BA4E88F827D616045507605853E", actual, "Testing SHAKE128 w/ no input");
      System.out.println("ACTUAL: " + actual);
      System.out.println("EXPECT: 7F9C2BA4E88F827D616045507605853E");
      System.out.println();
      
      System.out.println("F83091FFF290C4B333FB");
      inBytes = new byte[]{(byte) 0xF8,(byte) 0x30,(byte) 0x91,(byte) 0xFF,(byte) 0xF2,(byte) 0x90,(byte) 0xC4,(byte) 0xB3,(byte) 0x33,(byte) 0xFB};
      outBytes = HashLib.SHAKE128(inBytes, 128 / 8);
      actual = new BigInteger(1, outBytes).toString(16).toUpperCase();
      assertEquals("637E1CB6BDBEBB4793447E81E2A2BB60", actual, "Testing SHAKE128 w/ small input");
      System.out.println("ACTUAL: " + actual);
      System.out.println("EXPECT: 637E1CB6BDBEBB4793447E81E2A2BB60");
      System.out.println();
      
      System.out.println("5D9FF9FE63C328DDBE0C865AC6BA605C52A14EE8E4870BA320CE849283532F2551959E74CF1A54C8B30ED75DD92E076637E4AD5213B3574E73D6640BD6245BC121378174DCCDAA769E6E4F2DC650E1166C775D0A982021C0B160FE9438098E86B6CDC786F2A6D1EF68751551F7E99773DAA28598D9961002C0B47AB511C8707DF69F9B32796B723BF7685251D2C0D08567AD4E8540DDCC1B8A1A01F6C92AAAADCAF42301D9E53463");
      inBytes = new BigInteger("5D9FF9FE63C328DDBE0C865AC6BA605C52A14EE8E4870BA320CE849283532F2551959E74CF1A54C8B30ED75DD92E076637E4AD5213B3574E73D6640BD6245BC121378174DCCDAA769E6E4F2DC650E1166C775D0A982021C0B160FE9438098E86B6CDC786F2A6D1EF68751551F7E99773DAA28598D9961002C0B47AB511C8707DF69F9B32796B723BF7685251D2C0D08567AD4E8540DDCC1B8A1A01F6C92AAAADCAF42301D9E53463", 16)
            .toByteArray();
      outBytes = HashLib.SHAKE128(inBytes, 128 / 8);
      actual = new BigInteger(1, outBytes).toString(16).toUpperCase();
      assertEquals("F50AF2684408915871948779A14C147C", actual, "Testing SHAKE128 w/ med input");
      System.out.println("ACTUAL: " + actual);
      System.out.println("EXPECT: F50AF2684408915871948779A14C147C\n");
      
      System.out.println("F67736EBE3E1A4D3CB87DAFE2EF8F892E3C320BDB68C385F565EEB036F43F1141312914E5E8964725A9B5B3E200B039C403A081A633EF99A2F334A4A6BD69FD7645048DE8F4F07A46F5B1A06B96875B3B7A75098EAA2E19CF3886B8EB4C5775BB2D66185BD5C17D0D46F1E3F4334D63E0EB2FE2192E17ACD6A0454B590390209C44FE72932D71C604F7E6FCF049AACA70E021C9CA5234C965B500FA9485AC6476461DFB434E99CBBA93016A045C081557F40B1F0698FDD5D9014A450234F4D7E58B4530D0CBA2149AA2F1A984DCEDCB02913C607274EB88BCFF719946B411F1769F14A1C02713272192083A166ED4620D32462C826876289E1A1785C6657C2785FC0CDC95D37589EBFAE5AA2D645460D471B8D1BB06364BE8EBBC98F5EBAC00B02C8E3FC67331935657FA682E6FD64DF4B9F4FE80B0A47919DED12179991A1371AB2949D668E009FD13B6F2BDE3D28FEA858B11780A3936CD8DE5DDB6005EB636E25E894A36F9244CC8BBD84062F1BD326EFBA915757CEB60537B1C3FA3E28F9C7CAE8C966FF598D1D179975A5F8C4C48C0C733CD84D82D6ED9F17B7B163DF60ED499B25F765DCE08E860AE605C3AB3AA456E2014BAE363658BF959FCB9D9900A8490A8E9DCAA3A6E58019BF6CB6599E347611C9F7A1733D0E3F36639113DD41C0723BEDA1563748EBAFCDE823F955560513087A254FC053D6C6FFEC4BEE338BFC6E382B4B301F2C68B82E4A72B527CCDFD6CEFD1DDFA5E079FCFA204155234625E2092EE381E3BC244644CBA012586689676A3B277AAA4CC08A2EE8BA7136DA0379B4E0B1700C5FE6FF1854F7376F8ECD6DE71B8B4858007018A32D0069F3AF5ED94328FD26217C778BB1CEBD4DF4AB71914A8490703662544D62D55966E32DFEAABDED0ECBAA7DA093171F3B7B70243E7A9D607F1BCDDB33D272C90E908CBDAB952B192D862FC927BF5331B9EA6A63FCD0E896A070A3D4D44EDBF2660E78C52C419493A27F39C8D4B66CEA7FC16ACF733D310E3B9842B3006AA637AB092FAF4A580043B5DF4FE271216A34D429F8D06A6782B098BA32E17FCEDA7F23A837E1CD7F7811AECEFA7FC4A756F6024A9DCEABF6E264FFFFF9C719217FB418141AC57D6002E5D473C10797F137184F4BE031FC935A12B78F21CC960C9EBDD07460C121A3A9A770F72CE2B0A6158104554A6226E6F0A209913257BD363D8294F18F3F83F0723FCA81C378D76FF81B688F62C7F196AEFC3D2DB2D2574867EBABB331A669ED67952A3A0F32D6F4E9CDC522B0C9244C9C089B8D2BA42CE921E05FE1CD5E9C458F92D84A977674DCEF7F6135BCD089AFC1AF6AD6243504C27549F6A4ECCFE49EF21C1BD8E3AD78D0131986F10F45E66825D7F43326EDA77A6A0EB923156108A1991C3D0C7C40AB775C847A7E308E041ED0697FCAB834DDBA0817F087D07CD2F58B7B840FE995D57AD2A68503A715AB7ACB4E54C362726D2A584CE3F7A5880842D01F3909B216BE807D68F1A8FD41A2231D6CBB47AC0F20716196D99C1DED733271F2A321602A2D3266B20497B979B3C2CEADFB7E1F73BE382CDB1C9DBF13DB6B75DB0C807A38EB38946D08F56327A4FFE7F85E8F42060F26BF05F22314620895E4C1BA4E88AAC1390F7F43ED83B23E816E342AA29D31DAE424FAA456A343C159C78EF6B213E774DDE0D2FEA4A28249F16E4BA8E1B95AE91963A4795DF41CCF5F252908D4A257CFCD0E4D804547FF8DF6EC2420721DEB026E82E9BB618F56FB4E067A38DDBD6299B1A1D713F6FB91D239F2A7DA7D514AEE8B8BB3B089FD5A0BCE7269CEF5EC709930A25AFDDF45A0DF6287BC1D2BDEE1751785E9A2FEC58FC78972DE1143B8E998F318BD872AAD947D18B44B33A34B165EBB7973D7E76F5CF9240DC14AF0A8355EA20BE8F9FCBBD57403803C620E2053731E6E39986D832B674A4CFAC22345BCB3E483C29B80F8CB8CCCF377F394E6FF7AE96C222CB88A63DAA13571BE0515E75F618935B4DBEBDE8C1B15E52E5C24813CC37C18DDEF0C6B1AD1D30F89BEA21C29C224298E381D773E97EF6C5A8F62438155A403F13B8FADEF832BBA6A7574C4DBAF5D846FBD14FC68E988F5C05429AC1046EEC9B1C39D90215F475BA85311483BCF3B2FA0925AD7D3B9E869A9D4FF24B33F625365B0BD7C770C2EDB8C7F030E12CBC61269E0776E47AE18AE5B376F1330E80789552978D9BB33E8205E21D280274A061511CFF12B8C701FAE1FA4FEE150E8E553C8575410B37B7E146663040544F50421E286527569A8054F3C4336F7DBE8049A0861DB87288DF79EEB6B23042F74C71C222E21B3A7FED37BFC3D9EBB998F6D445B7095A7E1105BA53761B7E7B16E57F01AEEE74F0E199019A5BABE9652");
      inBytes = new BigInteger("F67736EBE3E1A4D3CB87DAFE2EF8F892E3C320BDB68C385F565EEB036F43F1141312914E5E8964725A9B5B3E200B039C403A081A633EF99A2F334A4A6BD69FD7645048DE8F4F07A46F5B1A06B96875B3B7A75098EAA2E19CF3886B8EB4C5775BB2D66185BD5C17D0D46F1E3F4334D63E0EB2FE2192E17ACD6A0454B590390209C44FE72932D71C604F7E6FCF049AACA70E021C9CA5234C965B500FA9485AC6476461DFB434E99CBBA93016A045C081557F40B1F0698FDD5D9014A450234F4D7E58B4530D0CBA2149AA2F1A984DCEDCB02913C607274EB88BCFF719946B411F1769F14A1C02713272192083A166ED4620D32462C826876289E1A1785C6657C2785FC0CDC95D37589EBFAE5AA2D645460D471B8D1BB06364BE8EBBC98F5EBAC00B02C8E3FC67331935657FA682E6FD64DF4B9F4FE80B0A47919DED12179991A1371AB2949D668E009FD13B6F2BDE3D28FEA858B11780A3936CD8DE5DDB6005EB636E25E894A36F9244CC8BBD84062F1BD326EFBA915757CEB60537B1C3FA3E28F9C7CAE8C966FF598D1D179975A5F8C4C48C0C733CD84D82D6ED9F17B7B163DF60ED499B25F765DCE08E860AE605C3AB3AA456E2014BAE363658BF959FCB9D9900A8490A8E9DCAA3A6E58019BF6CB6599E347611C9F7A1733D0E3F36639113DD41C0723BEDA1563748EBAFCDE823F955560513087A254FC053D6C6FFEC4BEE338BFC6E382B4B301F2C68B82E4A72B527CCDFD6CEFD1DDFA5E079FCFA204155234625E2092EE381E3BC244644CBA012586689676A3B277AAA4CC08A2EE8BA7136DA0379B4E0B1700C5FE6FF1854F7376F8ECD6DE71B8B4858007018A32D0069F3AF5ED94328FD26217C778BB1CEBD4DF4AB71914A8490703662544D62D55966E32DFEAABDED0ECBAA7DA093171F3B7B70243E7A9D607F1BCDDB33D272C90E908CBDAB952B192D862FC927BF5331B9EA6A63FCD0E896A070A3D4D44EDBF2660E78C52C419493A27F39C8D4B66CEA7FC16ACF733D310E3B9842B3006AA637AB092FAF4A580043B5DF4FE271216A34D429F8D06A6782B098BA32E17FCEDA7F23A837E1CD7F7811AECEFA7FC4A756F6024A9DCEABF6E264FFFFF9C719217FB418141AC57D6002E5D473C10797F137184F4BE031FC935A12B78F21CC960C9EBDD07460C121A3A9A770F72CE2B0A6158104554A6226E6F0A209913257BD363D8294F18F3F83F0723FCA81C378D76FF81B688F62C7F196AEFC3D2DB2D2574867EBABB331A669ED67952A3A0F32D6F4E9CDC522B0C9244C9C089B8D2BA42CE921E05FE1CD5E9C458F92D84A977674DCEF7F6135BCD089AFC1AF6AD6243504C27549F6A4ECCFE49EF21C1BD8E3AD78D0131986F10F45E66825D7F43326EDA77A6A0EB923156108A1991C3D0C7C40AB775C847A7E308E041ED0697FCAB834DDBA0817F087D07CD2F58B7B840FE995D57AD2A68503A715AB7ACB4E54C362726D2A584CE3F7A5880842D01F3909B216BE807D68F1A8FD41A2231D6CBB47AC0F20716196D99C1DED733271F2A321602A2D3266B20497B979B3C2CEADFB7E1F73BE382CDB1C9DBF13DB6B75DB0C807A38EB38946D08F56327A4FFE7F85E8F42060F26BF05F22314620895E4C1BA4E88AAC1390F7F43ED83B23E816E342AA29D31DAE424FAA456A343C159C78EF6B213E774DDE0D2FEA4A28249F16E4BA8E1B95AE91963A4795DF41CCF5F252908D4A257CFCD0E4D804547FF8DF6EC2420721DEB026E82E9BB618F56FB4E067A38DDBD6299B1A1D713F6FB91D239F2A7DA7D514AEE8B8BB3B089FD5A0BCE7269CEF5EC709930A25AFDDF45A0DF6287BC1D2BDEE1751785E9A2FEC58FC78972DE1143B8E998F318BD872AAD947D18B44B33A34B165EBB7973D7E76F5CF9240DC14AF0A8355EA20BE8F9FCBBD57403803C620E2053731E6E39986D832B674A4CFAC22345BCB3E483C29B80F8CB8CCCF377F394E6FF7AE96C222CB88A63DAA13571BE0515E75F618935B4DBEBDE8C1B15E52E5C24813CC37C18DDEF0C6B1AD1D30F89BEA21C29C224298E381D773E97EF6C5A8F62438155A403F13B8FADEF832BBA6A7574C4DBAF5D846FBD14FC68E988F5C05429AC1046EEC9B1C39D90215F475BA85311483BCF3B2FA0925AD7D3B9E869A9D4FF24B33F625365B0BD7C770C2EDB8C7F030E12CBC61269E0776E47AE18AE5B376F1330E80789552978D9BB33E8205E21D280274A061511CFF12B8C701FAE1FA4FEE150E8E553C8575410B37B7E146663040544F50421E286527569A8054F3C4336F7DBE8049A0861DB87288DF79EEB6B23042F74C71C222E21B3A7FED37BFC3D9EBB998F6D445B7095A7E1105BA53761B7E7B16E57F01AEEE74F0E199019A5BABE9652", 16)
            .toByteArray();
      inBytes = Arrays.copyOfRange(inBytes, 1, inBytes.length);
      outBytes = HashLib.SHAKE128(inBytes, 128 / 8);
      actual = new BigInteger(1, outBytes).toString(16).toUpperCase();
      assertEquals("8A98643F16B303E3A799AC40C5E886C6", actual, "Testing SHAKE128 w/ large input");
      System.out.println("ACTUAL: " + actual);
      System.out.println("EXPECT: 8A98643F16B303E3A799AC40C5E886C6\n");
      
   }
   
   @Test
   void testSHAKE256() {
      byte[] inBytes;
      byte[] outBytes;
      String actual;
      
      System.out.println("00");
      inBytes = new byte[]{};
      outBytes = HashLib.SHAKE256(inBytes, 256 / 8);
      actual = new BigInteger(1, outBytes).toString(16).toUpperCase();
      assertEquals("46B9DD2B0BA88D13233B3FEB743EEB243FCD52EA62B81B82B50C27646ED5762F", actual, "Testing SHAKE128 w/ no input");
      System.out.println("ACTUAL: " + actual);
      System.out.println("EXPECT: 46B9DD2B0BA88D13233B3FEB743EEB243FCD52EA62B81B82B50C27646ED5762F");
      System.out.println();
      
      System.out.println("76 2D 66 8E D0 4F B3 D0 CB 55");
      inBytes = new byte[]{(byte) 0x76,(byte) 0x2D,(byte) 0x66,(byte) 0X8E,(byte) 0xD0,(byte) 0x4F,(byte) 0xB3,(byte) 0xD0,(byte) 0xCB,(byte) 0x55};
      outBytes = HashLib.SHAKE256(inBytes, 256 / 8);
      actual = new BigInteger(1, outBytes).toString(16).toUpperCase();
      assertEquals("2D182BD68EB904023E025B2FDB8303E72F7138705D2780DEC2CF939EDF023764", actual, "Testing SHAKE128 w/ small input");
      System.out.println("ACTUAL: " + actual);
      System.out.println("EXPECT: 2D182BD68EB904023E025B2FDB8303E72F7138705D2780DEC2CF939EDF023764");
      System.out.println();
      
      System.out.println("B05007119789D382FA750D2087DDE79B37A5459C24522B649AC976B07059CBDF99FCCE56F6DA94246E0F5AE241AE77DD99068F7863240ACB5C99C4906F7D06403EB3B679FF6FCAA389F602D3AEA5D7EFCC35AF149F3D523459F8A104F5498615C8FC2740594F5F4872B16EBB77C9EF19F7BA0B3881A6EDE7B97175D2AAC731A65E608975AC82395B52C805624423A7A3431E0DAEB066C12CA389A9C338FEF03A296644DEA211");
      inBytes = new BigInteger("B05007119789D382FA750D2087DDE79B37A5459C24522B649AC976B07059CBDF99FCCE56F6DA94246E0F5AE241AE77DD99068F7863240ACB5C99C4906F7D06403EB3B679FF6FCAA389F602D3AEA5D7EFCC35AF149F3D523459F8A104F5498615C8FC2740594F5F4872B16EBB77C9EF19F7BA0B3881A6EDE7B97175D2AAC731A65E608975AC82395B52C805624423A7A3431E0DAEB066C12CA389A9C338FEF03A296644DEA211", 16)
            .toByteArray();
      inBytes = Arrays.copyOfRange(inBytes, 1, inBytes.length);
      outBytes = HashLib.SHAKE256(inBytes, 256 / 8);
      actual = new BigInteger(1, outBytes).toString(16).toUpperCase();
      assertEquals("9021FEFC1A020CD0C579E3DD67A66DACFABEDDE9CD36DDFC7D5C5C7C47BE2721", actual, "Testing SHAKE128 w/ med input");
      System.out.println("ACTUAL: " + actual);
      System.out.println("EXPECT: 9021FEFC1A020CD0C579E3DD67A66DACFABEDDE9CD36DDFC7D5C5C7C47BE2721\n");
      
      System.out.println("16AC07905B3A88CBAD786E78C4124544AEABB48A6722AFBCA914ED0405A29D2B337455B9A7FD4B5E6401C7901555D8765AE7470560FEC969B4C278A659FE847F182526971793D6D6AD16BE0E75AD6EDEA18FD1D7916F60DEA5FF95D14FB3A36E6CC76470D48393FA2FBE3B390BA16F462CAD3C4923FFDCE423D32CCF0F4861BFD763F68D0555E8949301265B00B94374A3486FA33E36A543D64726E6C245253C03FFC436D3923F6A80E767BA7B7D5330AC69522D099B23C36762695F903359AB95A6B6B266C1FF469F79E79EA5760544F217CD2FADB6BF2B7E2DDE82A09864D5385DB44BE56A90EE98BE8C51A62BC2761B5AC8F0520FDF45C2AE6D961BFFAE82922EA64778165A2A12BE3F1AA524F390D03A2BB91E2FEDD7DCEFFFE528ED9F794B2074EF494BC5C4B682E940CAEAFE58B8C0DED23C9D4FAA73F87AB5F0EC9F840C3B068B7D9439822B11700C3F044D977CF3C983D2E16F8630CFC84F9B8316697D8844633F761E2E1974BEC629FA4614C3DCD5140984B333BB7ECFFB503B6CF1450E17BEB57BDC8E2AB1B9B6B35553993681E8CC080D8578BB0D7900379A09E40CD665E6072ADB6B04D24B23029CDBEC7DECEBF4F8044C1ED982ACA8792A550A7CE618215E0B838C4FDE5B57415746D63F25C7D400F16FEEBCE752393E73B92B3B4816B8E2A73DBBB4DED098960FFB1F243262B4495D58AD0C4352FCADFC9B0EF10449F3BA856FBEDAD9942F294A648FD61DA6DCFAD06E26739F9439EF4D647C472097190F2E835E6BD78E642393E8EEFAEE7A933CD01920970200382BEE7D3DE4A6EA740828DF630CE1A67EAC6FEF033BABC52337E7C16220747E408A684C19729D294ACEFDED9567FDC4C7EB68E1973E5E71D2129CCEB5B7FEF69A34413BD8960E3CE4883413BC2436D08509052772AE0E65E9F677A8E104A6508F5004B141FA000A8A5F56BB9FEB91B2012ECE275C31C489AF0A01B8AEAE7674650736161D467B7D837BEA4C0762185383804C4A1D6F87C56E77C164E45E764A648061D13422887C1903782EBC34D299522A06F87C125F016C6440154ABBADBBD6E40C4C4E342DF0921F89C88607C76DB852859A43BF5425F3FA0434A96E23AD015AC0EE332774BF37F9A4842D8400B8FB214F9638206F1949609727C91EE0092F0B041FAAA165D250B651C97852846064BEEE5624DDB7C5B6BF81587274EDB8A61E60477D4A07112581180030195B4F3B51EA40CE9E3512843F482D6C1751A1AEBC5CCE72CC6264FD80828F1D838E6BC804C9BE000AEFE6F90776107EB114AB910D811D52CC7EB422DB16DF0736249E52FD153780C9EF2B5F40926872E73FC09538569AE4F564E7DABB5C58B6DA25CE2364551317843DC7FC11259D0E63D8C7046664AEF2EC1BE76E48DD62F2189AE5816212B98DE3DFA419A3B6171BCDEAA724BE31C1425CAB9A26A9206682988ACAB51FD393AA8DDFA8FD1ECD3D60CC7A4A3E69473C9EEB1DEA4907AECA2F01FD6507C22008362B44BDF2A9F379A7099297998E2E85CC4178BE21890DF8C1FBFB9EBE738180F86417CA3E6CAE32B62C39767F566C069407C4FDF458C75600308D5D245C7F63B9E15FB62A9089D156DC78CF36E98B26C0E509910B9B644EB345BA8A7FA2A11A4149246BFE3D09BC4FC1568A076E134C16825061AE7B6A47A4E58B0D1870700B58456FD0029AB85C6984DB903A0D8AE26087A055242063A999B606CE37EC739FC67D47CD7ED01D196CCD0FC717F07A4F649B0255B7B1D6DB5B6035B6243E323E5298B44AB906C05C1F43FB18E63C6AFBEB677D49AD564C47B28C20AB268F3551C63FBE2FFC652A8B4B8FA66BEE1CE34EBC9319194F394C5465E2CE968607053EE8196E648F15E210B85918A978B66CB0A1C6DEAEE57F5E6A3E0947608DCD296F81CFCBD2BA3D70512E485AB8CC328D8960A8D5EEB7530AF103AA93EF800A294A5808DD5FC5065DB87504738232B9CE41C2E205C20CDBD9517D6CBB2DAAE58E39376DADF4F79730AB54366BEEF273B8408F1C77122E3F52F374F8C6015287DEA3E4A5427A9919719495864BE35387D2EE8FFD31C763A8FE3DB0F5BC52BF17A4F02859A5D7F3B3A9DAFE9B1A4B9E1DA4B4892E3DC7F43E6398F80CA50A3ABE6587CB31DCF54D8E5FE5581EE00D1C5FB7F84757A3FC29280B6D15E58A100BA4ABD295D4F1BAEFD11B1D6AB6A511127392238F1F694D498F7E22D027724C7AF0FD384EEBEB1020A565EAFE0C723FCB81BE9E2A2E99A19E9A4221EF7A66A6CFCBE421BD1DD3DE2A32C6B4DAC74E7F8EB2C1D0E02D3AE26E72E1D03A886D06");
      inBytes = new BigInteger("16AC07905B3A88CBAD786E78C4124544AEABB48A6722AFBCA914ED0405A29D2B337455B9A7FD4B5E6401C7901555D8765AE7470560FEC969B4C278A659FE847F182526971793D6D6AD16BE0E75AD6EDEA18FD1D7916F60DEA5FF95D14FB3A36E6CC76470D48393FA2FBE3B390BA16F462CAD3C4923FFDCE423D32CCF0F4861BFD763F68D0555E8949301265B00B94374A3486FA33E36A543D64726E6C245253C03FFC436D3923F6A80E767BA7B7D5330AC69522D099B23C36762695F903359AB95A6B6B266C1FF469F79E79EA5760544F217CD2FADB6BF2B7E2DDE82A09864D5385DB44BE56A90EE98BE8C51A62BC2761B5AC8F0520FDF45C2AE6D961BFFAE82922EA64778165A2A12BE3F1AA524F390D03A2BB91E2FEDD7DCEFFFE528ED9F794B2074EF494BC5C4B682E940CAEAFE58B8C0DED23C9D4FAA73F87AB5F0EC9F840C3B068B7D9439822B11700C3F044D977CF3C983D2E16F8630CFC84F9B8316697D8844633F761E2E1974BEC629FA4614C3DCD5140984B333BB7ECFFB503B6CF1450E17BEB57BDC8E2AB1B9B6B35553993681E8CC080D8578BB0D7900379A09E40CD665E6072ADB6B04D24B23029CDBEC7DECEBF4F8044C1ED982ACA8792A550A7CE618215E0B838C4FDE5B57415746D63F25C7D400F16FEEBCE752393E73B92B3B4816B8E2A73DBBB4DED098960FFB1F243262B4495D58AD0C4352FCADFC9B0EF10449F3BA856FBEDAD9942F294A648FD61DA6DCFAD06E26739F9439EF4D647C472097190F2E835E6BD78E642393E8EEFAEE7A933CD01920970200382BEE7D3DE4A6EA740828DF630CE1A67EAC6FEF033BABC52337E7C16220747E408A684C19729D294ACEFDED9567FDC4C7EB68E1973E5E71D2129CCEB5B7FEF69A34413BD8960E3CE4883413BC2436D08509052772AE0E65E9F677A8E104A6508F5004B141FA000A8A5F56BB9FEB91B2012ECE275C31C489AF0A01B8AEAE7674650736161D467B7D837BEA4C0762185383804C4A1D6F87C56E77C164E45E764A648061D13422887C1903782EBC34D299522A06F87C125F016C6440154ABBADBBD6E40C4C4E342DF0921F89C88607C76DB852859A43BF5425F3FA0434A96E23AD015AC0EE332774BF37F9A4842D8400B8FB214F9638206F1949609727C91EE0092F0B041FAAA165D250B651C97852846064BEEE5624DDB7C5B6BF81587274EDB8A61E60477D4A07112581180030195B4F3B51EA40CE9E3512843F482D6C1751A1AEBC5CCE72CC6264FD80828F1D838E6BC804C9BE000AEFE6F90776107EB114AB910D811D52CC7EB422DB16DF0736249E52FD153780C9EF2B5F40926872E73FC09538569AE4F564E7DABB5C58B6DA25CE2364551317843DC7FC11259D0E63D8C7046664AEF2EC1BE76E48DD62F2189AE5816212B98DE3DFA419A3B6171BCDEAA724BE31C1425CAB9A26A9206682988ACAB51FD393AA8DDFA8FD1ECD3D60CC7A4A3E69473C9EEB1DEA4907AECA2F01FD6507C22008362B44BDF2A9F379A7099297998E2E85CC4178BE21890DF8C1FBFB9EBE738180F86417CA3E6CAE32B62C39767F566C069407C4FDF458C75600308D5D245C7F63B9E15FB62A9089D156DC78CF36E98B26C0E509910B9B644EB345BA8A7FA2A11A4149246BFE3D09BC4FC1568A076E134C16825061AE7B6A47A4E58B0D1870700B58456FD0029AB85C6984DB903A0D8AE26087A055242063A999B606CE37EC739FC67D47CD7ED01D196CCD0FC717F07A4F649B0255B7B1D6DB5B6035B6243E323E5298B44AB906C05C1F43FB18E63C6AFBEB677D49AD564C47B28C20AB268F3551C63FBE2FFC652A8B4B8FA66BEE1CE34EBC9319194F394C5465E2CE968607053EE8196E648F15E210B85918A978B66CB0A1C6DEAEE57F5E6A3E0947608DCD296F81CFCBD2BA3D70512E485AB8CC328D8960A8D5EEB7530AF103AA93EF800A294A5808DD5FC5065DB87504738232B9CE41C2E205C20CDBD9517D6CBB2DAAE58E39376DADF4F79730AB54366BEEF273B8408F1C77122E3F52F374F8C6015287DEA3E4A5427A9919719495864BE35387D2EE8FFD31C763A8FE3DB0F5BC52BF17A4F02859A5D7F3B3A9DAFE9B1A4B9E1DA4B4892E3DC7F43E6398F80CA50A3ABE6587CB31DCF54D8E5FE5581EE00D1C5FB7F84757A3FC29280B6D15E58A100BA4ABD295D4F1BAEFD11B1D6AB6A511127392238F1F694D498F7E22D027724C7AF0FD384EEBEB1020A565EAFE0C723FCB81BE9E2A2E99A19E9A4221EF7A66A6CFCBE421BD1DD3DE2A32C6B4DAC74E7F8EB2C1D0E02D3AE26E72E1D03A886D06", 16)
            .toByteArray();
      outBytes = HashLib.SHAKE256(inBytes, 256 / 8);
      actual = new BigInteger(1, outBytes).toString(16).toUpperCase();
      assertEquals("E7862D9E578C16C6640F3E047E8171E020D69FDC95DFECECB626245DDF59C072", actual, "Testing SHAKE128 w/ large input");
      System.out.println("ACTUAL: " + actual);
      System.out.println("EXPECT: E7862D9E578C16C6640F3E047E8171E020D69FDC95DFECECB626245DDF59C072\n");
      
   }
   
   @Test
   void testCSHAKE128() {
      byte[] inBytes;
      byte[] outBytes;
      String actual;
      
      System.out.println("00010203");
      inBytes = new byte[]{0x00, 0x01, 0x02, 0x03};
      outBytes = HashLib.cSHAKE128(inBytes, 256 / 8, "", "Email Signature");
      actual = new BigInteger(1, outBytes).toString(16).toUpperCase();
      assertEquals("C1C36925B6409A04F1B504FCBCA9D82B4017277CB5ED2B2065FC1D3814D5AAF5", actual, "Testing cSHAKE w/ small input");
      System.out.println("ACTUAL: " + actual);
      System.out.println("EXPECT: C1C36925B6409A04F1B504FCBCA9D82B4017277CB5ED2B2065FC1D3814D5AAF5\n");
   }
   
   @Test
   void testCSHAKE256() {
      byte[] inBytes;
      byte[] outBytes;
      String actual;
   
      System.out.println("00010203");
      inBytes = new byte[]{0x00, 0x01, 0x02, 0x03};
      outBytes = HashLib.cSHAKE256(inBytes, 512 / 8, "", "Email Signature");
      actual = new BigInteger(1, outBytes).toString(16).toUpperCase();
      assertEquals("D008828E2B80AC9D2218FFEE1D070C48B8E4C87BFF32C9699D5B6896EEE0EDD164020E2BE0560858D9C00C037E34A96937C561A74C412BB4C746469527281C8C", actual, "Testing cSHAKE w/ small input");
      System.out.println("ACTUAL: " + actual);
      System.out.println("EXPECT: D008828E2B80AC9D2218FFEE1D070C48B8E4C87BFF32C9699D5B6896EEE0EDD164020E2BE0560858D9C00C037E34A96937C561A74C412BB4C746469527281C8C\n");
   }
   
   @Test
   void testKMACXOF128() {
      byte[] inBytes;
      byte[] outBytes;
      String actual;
   
      System.out.println("5D9FF9FE63C328DDBE0C865AC6BA605C52A14EE8E4870BA320CE849283532F2551959E74CF1A54C8B30ED75DD92E076637E4AD5213B3574E73D6640BD6245BC121378174DCCDAA769E6E4F2DC650E1166C775D0A982021C0B160FE9438098E86B6CDC786F2A6D1EF68751551F7E99773DAA28598D9961002C0B47AB511C8707DF69F9B32796B723BF7685251D2C0D08567AD4E8540DDCC1B8A1A01F6C92AAAADCAF42301D9E53463");
      inBytes = new BigInteger("5D9FF9FE63C328DDBE0C865AC6BA605C52A14EE8E4870BA320CE849283532F2551959E74CF1A54C8B30ED75DD92E076637E4AD5213B3574E73D6640BD6245BC121378174DCCDAA769E6E4F2DC650E1166C775D0A982021C0B160FE9438098E86B6CDC786F2A6D1EF68751551F7E99773DAA28598D9961002C0B47AB511C8707DF69F9B32796B723BF7685251D2C0D08567AD4E8540DDCC1B8A1A01F6C92AAAADCAF42301D9E53463", 16)
            .toByteArray();
      outBytes = HashLib.KMACXOF128("".getBytes(), inBytes, 256 / 8, "");
      actual = new BigInteger(1, outBytes).toString(16).toUpperCase();
      System.out.println("ACTUAL: " + actual);
      System.out.println("EXPECT: ?\n");
   }
   
   @Test
   void testKMACXOF256() {
      byte[] inBytes;
      byte[] outBytes;
      String actual;
   
      System.out.println("5D9FF9FE63C328DDBE0C865AC6BA605C52A14EE8E4870BA320CE849283532F2551959E74CF1A54C8B30ED75DD92E076637E4AD5213B3574E73D6640BD6245BC121378174DCCDAA769E6E4F2DC650E1166C775D0A982021C0B160FE9438098E86B6CDC786F2A6D1EF68751551F7E99773DAA28598D9961002C0B47AB511C8707DF69F9B32796B723BF7685251D2C0D08567AD4E8540DDCC1B8A1A01F6C92AAAADCAF42301D9E53463");
      inBytes = new BigInteger("5D9FF9FE63C328DDBE0C865AC6BA605C52A14EE8E4870BA320CE849283532F2551959E74CF1A54C8B30ED75DD92E076637E4AD5213B3574E73D6640BD6245BC121378174DCCDAA769E6E4F2DC650E1166C775D0A982021C0B160FE9438098E86B6CDC786F2A6D1EF68751551F7E99773DAA28598D9961002C0B47AB511C8707DF69F9B32796B723BF7685251D2C0D08567AD4E8540DDCC1B8A1A01F6C92AAAADCAF42301D9E53463", 16)
            .toByteArray();
      outBytes = HashLib.KMACXOF256("".getBytes(), inBytes, 256 / 8, "");
      actual = new BigInteger(1, outBytes).toString(16).toUpperCase();
      System.out.println("ACTUAL: " + actual);
      System.out.println("EXPECT: ?\n");
   }
   
   @Test
   void testByteTruncN() {
      byte[][] tests = new byte[50][50];
      for (byte[] vector : tests) {
         new Random().nextBytes(vector);
      }
      
      for (int i = 0; i < tests.length; i++) {
         assertEquals(
               i,
               HashLib.byteTruncN(tests[i], i).length,
               String.format(
                     "Should truncate to the same length as i, which was: %d", i
               )
         );
      }
   }
   }
